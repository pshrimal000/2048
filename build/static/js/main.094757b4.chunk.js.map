{"version":3,"sources":["components/Scores.js","components/Header.js","components/Cell.js","components/Row.js","transformGrid.js","gameLogic.js","components/Grid.js","components/Game.js","components/GameOverlay.js","components/Footer.js","index.js"],"names":["Scores","props","react_default","a","createElement","className","score","best","Header","components_Scores","onClick","resetGame","Cell","label","GridRow","components_Cell","row","shiftLeft","arr","result","filter","Boolean","concat","slice","i","len","length","gridFunction","grid","func","getAvailableCells","j","push","col","transformGrid","display","self","g","console","log","shiftRight","rotateRight","rotateLeft","shiftUp","shiftDown","addRandomCell","availableCells","availableCellsLength","randomCell","Math","floor","random","randomNumber","getCellCount","calcScore","preGrid","postGrid","preFlatten","flat","postFlatten","preCount","postCount","keys","Object","preValue","multiplier","parseInt","gameLogic","addCell","JSON","stringify","transform","setBest","setScore","setGridState","TransformGrid","hasNoMovesLeft","every","x","has2048","some","Grid","useEffect","handleKeyDown","e","preventDefault","status","key","GameLogic","alert","setStatus","window","addEventListener","removeEventListener","Row","Game","_useState","useState","_grid","TranformGrid","_useState2","slicedToArray","setGrid","components_Grid","GameOverlay","tryAgain","Footer","href","App","_useState3","localStorage","getItem","_useState4","_useState5","_useState6","game","setGame","_useState7","_useState8","components_Header","components_GameOverlay","components_Game","setItem","components_Footer","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.094757b4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Scores(props) {\r\n  return (\r\n    <div className=\"scores\">\r\n      <div className=\"score score--current\">{props.score}</div>\r\n      <div className=\"score score--best\">{props.best}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scores;\r\n","import React from \"react\";\r\nimport Scores from \"./Scores\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__row\">\r\n        <h1 className=\"header__title\">2048</h1>\r\n        <Scores score={props.score} best={props.best} />\r\n      </div>\r\n      <div className=\"header__row\">\r\n        <p className=\"header__intro\">\r\n          Join the numbers and get to the\r\n          <strong>2048 tile!</strong>\r\n        </p>\r\n        <button className=\"restart\" onClick={props.resetGame}>\r\n          New Game\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Cell(props) {\r\n  return (\r\n    <div className={\"cell cell--\" + props.label}>\r\n      <span className=\"cell__label\">{props.label}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cell;\r\n","import React from \"react\";\r\nimport Cell from \"./Cell\";\r\n\r\nfunction GridRow(props) {\r\n  return (\r\n    <div className=\"row\">\r\n      <Cell label={props.row[0]} />\r\n      <Cell label={props.row[1]} />\r\n      <Cell label={props.row[2]} />\r\n      <Cell label={props.row[3]} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GridRow;\r\n","const shiftLeft = arr => {\r\n  const result = arr\r\n    .filter(Boolean)\r\n    .concat([null, null, null, null])\r\n    .slice(0, 4);\r\n\r\n  for (let i = 0, len = arr.length; i < len; i++) {\r\n    if (result[i] && result[i + 1] && result[i] === result[i + 1]) {\r\n      result[i] *= 2;\r\n      result[i + 1] = null;\r\n    }\r\n  }\r\n\r\n  return result\r\n    .filter(Boolean)\r\n    .concat([null, null, null, null])\r\n    .slice(0, 4);\r\n};\r\n\r\nconst shiftRight = arr => {\r\n  arr = arr.filter(i => i != null);\r\n  let arrLen = arr.length - 1;\r\n  let result = [];\r\n\r\n  for (let i = arrLen; i > 0; i--) {\r\n    if (arr[i] && arr[i - 1] && arr[i] === arr[i - 1]) {\r\n      arr[i] *= 2;\r\n      arr[i - 1] = null;\r\n    }\r\n  }\r\n\r\n  result = [null, null, null, null].concat(arr.filter(i => i != null));\r\n  result = result.slice(result.length - 4);\r\n  return result;\r\n};\r\n\r\nconst gridFunction = (grid, func) => {\r\n  for (let i = 0; i < 4; i++) {\r\n    func(grid[i]);\r\n  }\r\n};\r\n\r\nconst addRandomCell = grid => {\r\n  const availableCells = getAvailableCells(grid);\r\n  const availableCellsLength = availableCells.length;\r\n\r\n  if (!availableCellsLength) {\r\n    return grid;\r\n  }\r\n\r\n  const randomCell =\r\n    availableCells[Math.floor(Math.random() * availableCellsLength)];\r\n  const randomNumber = Math.random() < 0.9 ? 2 : 4;\r\n\r\n  grid[randomCell.row][randomCell.col] = randomNumber;\r\n\r\n  return grid;\r\n};\r\n\r\nconst getAvailableCells = grid => {\r\n  let result = [];\r\n\r\n  for (let i = 0; i < grid.length; i++) {\r\n    for (let j = 0; j < grid.length; j++) {\r\n      if (grid[i][j] == null) {\r\n        result.push({ row: i, col: j });\r\n      }\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst display = {\r\n  self: g => {\r\n    gridFunction(g, i => console.log(i));\r\n  },\r\n  shiftLeft: g => {\r\n    gridFunction(g, i => console.log(shiftLeft(i)));\r\n  },\r\n  shiftRight: g => {\r\n    gridFunction(g, i => console.log(shiftLeft(i)));\r\n  }\r\n};\r\n\r\nconst transformGrid = {\r\n  display: display,\r\n  shiftLeft: g => {\r\n    let grid = [];\r\n\r\n    gridFunction(g, function(i) {\r\n      grid.push(shiftLeft(i));\r\n    });\r\n\r\n    return grid;\r\n  },\r\n  shiftRight: g => {\r\n    let grid = [];\r\n\r\n    gridFunction(g, function(i) {\r\n      grid.push(shiftRight(i));\r\n    });\r\n\r\n    return grid;\r\n  },\r\n  rotateRight: grid => {\r\n    const result = [\r\n      [grid[3][0], grid[2][0], grid[1][0], grid[0][0]],\r\n      [grid[3][1], grid[2][1], grid[1][1], grid[0][1]],\r\n      [grid[3][2], grid[2][2], grid[1][2], grid[0][2]],\r\n      [grid[3][3], grid[2][3], grid[1][3], grid[0][3]]\r\n    ];\r\n\r\n    return result;\r\n  },\r\n  rotateLeft: grid => {\r\n    let result = [\r\n      [grid[0][3], grid[1][3], grid[2][3], grid[3][3]],\r\n      [grid[0][2], grid[1][2], grid[2][2], grid[3][2]],\r\n      [grid[0][1], grid[1][1], grid[2][1], grid[3][1]],\r\n      [grid[0][0], grid[1][0], grid[2][0], grid[3][0]]\r\n    ];\r\n\r\n    return result;\r\n  },\r\n  shiftUp: grid => {\r\n    let result = [];\r\n\r\n    result = transformGrid.rotateLeft(grid);\r\n    result = transformGrid.shiftLeft(result);\r\n    result = transformGrid.rotateRight(result);\r\n\r\n    return result;\r\n  },\r\n  shiftDown: grid => {\r\n    let result = [];\r\n\r\n    result = transformGrid.rotateRight(grid);\r\n    result = transformGrid.shiftLeft(result);\r\n    result = transformGrid.rotateLeft(result);\r\n\r\n    return result;\r\n  },\r\n  addRandomCell: grid => {\r\n    return addRandomCell(grid);\r\n  },\r\n  getAvailableCells: grid => {\r\n    return getAvailableCells(grid);\r\n  }\r\n};\r\n\r\nexport default transformGrid;\r\n","import TransformGrid from \"./transformGrid\";\r\n\r\nconst addCell = (grid, props) => {\r\n  // Don't add cell if there was no transformation\r\n  if (JSON.stringify(grid) === JSON.stringify(props.grid)) {\r\n    return {\r\n      score: 0,\r\n      best: props.best,\r\n      grid: props.grid,\r\n      transform: grid\r\n    };\r\n  }\r\n\r\n  let score = props.score + calcScore(props.grid, grid);\r\n\r\n  if (score > props.best) {\r\n    props.setBest(score);\r\n  }\r\n\r\n  props.setScore(score);\r\n  props.setGridState(TransformGrid.addRandomCell(grid));\r\n\r\n  return {\r\n    score: score,\r\n    best: props.best,\r\n    grid: props.grid,\r\n    transform: grid\r\n  };\r\n};\r\n\r\nconst getCellCount = arr => {\r\n  let result = {};\r\n\r\n  for (let i = 0, len = arr.length; i < len; i++) {\r\n    if (!result[arr[i]]) {\r\n      result[arr[i]] = 1;\r\n    } else {\r\n      result[arr[i]]++;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst calcScore = (preGrid, postGrid) => {\r\n  let preFlatten = preGrid.flat().filter(Boolean),\r\n    postFlatten = postGrid.flat().filter(Boolean),\r\n    preCount = getCellCount(preFlatten),\r\n    postCount = getCellCount(postFlatten),\r\n    keys = Object.keys(postCount),\r\n    score = 0;\r\n\r\n  for (let i = 0, len = keys.length; i < len; i++) {\r\n    let preValue = preCount[keys[i]] || 0;\r\n\r\n    if (postCount[keys[i]] > preValue) {\r\n      const multiplier = postCount[keys[i]] - preValue;\r\n      score += parseInt(keys[i], 10) * multiplier;\r\n    }\r\n  }\r\n\r\n  return score;\r\n};\r\n\r\nconst hasNoMovesLeft = grid => {\r\n  let result = [];\r\n\r\n  result.push(\r\n    JSON.stringify(TransformGrid.shiftUp(grid)) === JSON.stringify(grid)\r\n  );\r\n  result.push(\r\n    JSON.stringify(TransformGrid.shiftLeft(grid)) === JSON.stringify(grid)\r\n  );\r\n  result.push(\r\n    JSON.stringify(TransformGrid.shiftDown(grid)) === JSON.stringify(grid)\r\n  );\r\n  result.push(\r\n    JSON.stringify(TransformGrid.shiftRight(grid)) === JSON.stringify(grid)\r\n  );\r\n\r\n  return result.every(x => x === true);\r\n};\r\n\r\nconst has2048 = grid => {\r\n  return grid.flat().some(x => x >= 2048);\r\n};\r\n\r\nconst gameLogic = {\r\n  addCell: addCell,\r\n  hasNoMovesLeft: hasNoMovesLeft,\r\n  has2048: has2048,\r\n  calcScore: calcScore\r\n};\r\n\r\nexport default gameLogic;\r\n","import React, { useEffect } from \"react\";\r\nimport Row from \"./Row\";\r\nimport TransformGrid from \"../transformGrid\";\r\nimport GameLogic from \"../gameLogic\";\r\n\r\nfunction Grid(props) {\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      e.preventDefault();\r\n\r\n      if (props.status !== \"running\" && props.status !== \"continue\") return;\r\n      let result = {};\r\n\r\n      switch (e.key) {\r\n        case \"ArrowUp\":\r\n          result = GameLogic.addCell(TransformGrid.shiftUp(props.grid), props);\r\n          break;\r\n        case \"ArrowRight\":\r\n          result = GameLogic.addCell(\r\n            TransformGrid.shiftRight(props.grid),\r\n            props\r\n          );\r\n          break;\r\n        case \"ArrowDown\":\r\n          result = GameLogic.addCell(\r\n            TransformGrid.shiftDown(props.grid),\r\n            props\r\n          );\r\n          break;\r\n        case \"ArrowLeft\":\r\n          result = GameLogic.addCell(\r\n            TransformGrid.shiftLeft(props.grid),\r\n            props\r\n          );\r\n          break;\r\n        default:\r\n          alert(\"Invalid key\");\r\n      }\r\n\r\n      if (props.status !== \"continue\" && GameLogic.has2048(result.transform)) {\r\n        props.setStatus(\"won\");\r\n      }\r\n\r\n      if (GameLogic.hasNoMovesLeft(result.transform)) {\r\n        props.setStatus(\"over\");\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"grid\">\r\n      <Row row={props.grid[0]} />\r\n      <Row row={props.grid[1]} />\r\n      <Row row={props.grid[2]} />\r\n      <Row row={props.grid[3]} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Grid;\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"./Grid\";\r\nimport TranformGrid from \"../transformGrid\";\r\n\r\nfunction Game(props) {\r\n  const [grid, setGrid] = useState(() => {\r\n    let _grid = [\r\n      [null, null, null, null],\r\n      [null, null, null, null],\r\n      [null, null, null, null],\r\n      [null, null, null, null]\r\n    ];\r\n\r\n    _grid = TranformGrid.addRandomCell(_grid);\r\n    _grid = TranformGrid.addRandomCell(_grid);\r\n\r\n    return _grid;\r\n  });\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <Grid\r\n        grid={grid}\r\n        setGridState={setGrid}\r\n        score={props.score}\r\n        setScore={props.setScore}\r\n        best={props.best}\r\n        setBest={props.setBest}\r\n        status={props.status}\r\n        setStatus={props.setStatus}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\n\r\nfunction GameOverlay(props) {\r\n  return (\r\n    <div>\r\n      <div\r\n        className={\r\n          props.status === \"over\"\r\n            ? \"game-overlay game-overlay--over active\"\r\n            : \"game-overlay game-overlay--over\"\r\n        }\r\n      >\r\n        <h1 className=\"game-overlay__message\">Game Over!</h1>\r\n        <button className=\"game-overlay__try-again\" onClick={props.tryAgain}>\r\n          Try Again\r\n        </button>\r\n      </div>\r\n      <div\r\n        className={\r\n          props.status === \"won\"\r\n            ? \"game-overlay game-overlay--won active\"\r\n            : \"game-overlay game-overlay--won\"\r\n        }\r\n      >\r\n        <h1 className=\"game-overlay__message\">You win!</h1>\r\n        <button\r\n          className=\"game-overlay__keep-going\"\r\n          onClick={() => {\r\n            props.setStatus(\"continue\");\r\n          }}\r\n        >\r\n          Keep going\r\n        </button>\r\n        <button className=\"game-overlay__try-again\" onClick={props.tryAgain}>\r\n          Try Again\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameOverlay;\r\n","import React from \"react\";\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p className=\"footer__how-to-play\">\r\n        <span className=\"footer__emphasized-text\">HOW TO PLAY:</span>\r\n        Use your\r\n        <span className=\"footer__emphasized-text\">arrow keys</span>\r\n        to move the tiles. When two tiles with the same number touch, they\r\n        <span className=\"footer__emphasized-text\">merge into one!</span>\r\n      </p>\r\n      <p className=\"footer__attribution\">\r\n          Made with &#9829; by \r\n          <a className=\"footer__link\" href=\"#\">Ashutosh Shrimal</a>        \r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header\";\nimport Game from \"./components/Game\";\nimport GameOverlay from \"./components/GameOverlay\";\nimport Footer from \"./components/Footer\";\n\nimport \"./styles/header.css\";\nimport \"./styles/game.css\";\nimport \"./styles/game-overlay.css\";\nimport \"./styles/footer.css\";\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const [best, setBest] = useState(localStorage.getItem(\"Best\") || 0);\n  const [game, setGame] = useState(0);\n  const [status, setStatus] = useState(\"running\");\n\n  const resetGame = () => {\n    setScore(0);\n    setGame(game + 1);\n    setStatus(\"running\");\n  };\n\n  const cacheBest = score => {\n    localStorage.setItem(\"Best\", score);\n    setBest(score);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header score={score} best={best} resetGame={resetGame} />\n      <GameOverlay tryAgain={resetGame} status={status} setStatus={setStatus} />\n      <Game\n        key={game}\n        score={score}\n        setScore={setScore}\n        best={best}\n        setBest={cacheBest}\n        status={status}\n        setStatus={setStatus}\n      />\n      <Footer />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}